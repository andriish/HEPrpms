diff -Naur ORIG/cmake/DD4hepBuild.cmake PATCHED/cmake/DD4hepBuild.cmake
--- ORIG/cmake/DD4hepBuild.cmake	2021-05-06 12:02:29.075875903 +0200
+++ PATCHED/cmake/DD4hepBuild.cmake	2021-05-06 12:02:29.077875902 +0200
@@ -675,19 +675,7 @@
 
   #Check if Python version detected matches the version used to build ROOT
   SET(Python_FIND_FRAMEWORK LAST)
-  IF((TARGET ROOT::PyROOT OR TARGET ROOT::ROOTTPython) AND ${ROOT_VERSION} VERSION_GREATER_EQUAL 6.19)
-    # some cmake versions don't include python patch level in PYTHON_VERSION
-    IF(CMAKE_VERSION VERSION_GREATER_EQUAL 3.16.0 AND CMAKE_VERSION VERSION_LESS_EQUAL 3.17.2)
-      string(REGEX MATCH [23]\.[0-9]+ REQUIRE_PYTHON_VERSION ${ROOT_PYTHON_VERSION})
-    ELSE()
-      SET(REQUIRE_PYTHON_VERSION ${ROOT_PYTHON_VERSION})
-    ENDIF()
-    dd4hep_debug("D++> Python version used for building ROOT ${ROOT_PYTHON_VERSION}" )
-    dd4hep_debug("D++> Required python version ${REQUIRE_PYTHON_VERSION}")
-    FIND_PACKAGE(Python ${REQUIRE_PYTHON_VERSION} EXACT REQUIRED COMPONENTS Development)
-  ELSE()
-    FIND_PACKAGE(Python COMPONENTS Development)
-  ENDIF()
+  FIND_PACKAGE(Python 3 COMPONENTS Development)
 
   SET(DD4HEP_PYTHON_INSTALL_DIR lib/python${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}/site-packages)
 
diff -Naur ORIG/CMakeLists.txt PATCHED/CMakeLists.txt
--- ORIG/CMakeLists.txt	2021-05-06 12:02:29.073875903 +0200
+++ PATCHED/CMakeLists.txt	2021-05-06 12:02:29.075875903 +0200
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.12 FATAL_ERROR)
+cmake_minimum_required(VERSION 3.11 FATAL_ERROR)
 PROJECT( DD4hep LANGUAGES NONE)
 SET_PROPERTY(DIRECTORY . PROPERTY PACKAGE_NAME DD4hep)
 
@@ -15,6 +15,9 @@
 #######################
 
 set ( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake )
+if (CMAKE_VERSION VERSION_LESS 3.12)
+  set ( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake/python )
+endif()
 
 IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
   SET( CMAKE_INSTALL_PREFIX ${CMAKE_SOURCE_DIR} CACHE PATH
@@ -65,7 +68,11 @@
 # NINJA ONLY
 # Limit number of parallel DDParser builds to number equal to 2 gigs per core
 cmake_host_system_information(RESULT HOST_RAM_MB QUERY TOTAL_PHYSICAL_MEMORY)
-math(EXPR DD4HEP_HIGH_MEM_POOL_DEPTH "${HOST_RAM_MB} / 2000" OUTPUT_FORMAT DECIMAL)
+if (CMAKE_VERSION VERSION_LESS 3.12)
+  set(DD4HEP_HIGH_MEM_POOL_DEPTH 1)
+else()
+  math(EXPR DD4HEP_HIGH_MEM_POOL_DEPTH "${HOST_RAM_MB} / 2000" OUTPUT_FORMAT DECIMAL)
+endif()
 
 option(DD4HEP_USE_XERCESC       "Enable 'Detector Builders' based on XercesC"   OFF)
 option(DD4HEP_USE_GEANT4        "Enable the simulation part based on Geant4"    OFF)
